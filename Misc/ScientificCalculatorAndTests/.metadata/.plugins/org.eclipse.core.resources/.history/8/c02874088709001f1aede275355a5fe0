package scientificCalculator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CalculatorGUI extends JFrame {
	private JTextField displayField;
    private JPanel buttonPanel;
//    private String firstOperand;
//    private String secondOperand;
//    private String operation;
    private CalculatorUserInput calculatorUserInput;

    public CalculatorGUI() {
    	calculatorUserInput = new CalculatorUserInput();
//    	firstOperand = "";
//    	secondOperand = "";
//    	operation = "";
    	
    	setTitle("Calculator");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        displayField = new JTextField();
        displayField.setEditable(false);
        add(displayField, BorderLayout.NORTH);

        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(6, 4));

        String[] buttonLabels = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "=", "+",
                "M+", "M-", "M-Recall", "M-Clear",
                "Delete", "Square", "Sqrt", ""
        };

        for (String label : buttonLabels) {
            JButton button = new JButton(label);
            button.addActionListener(new ButtonClickListener());
            buttonPanel.add(button);
        }

        add(buttonPanel, BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }

    private class ButtonClickListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            String command = e.getActionCommand();
            if (command.equals("=")) {
                calculate();
            }
            else if (command.equals(""))
            else {
                displayField.setText(displayField.getText() + command);
            }
        }

        private void calculate() {
            String expression = displayField.getText();
            try {
                // Evaluate the expression using JavaScript engine
                Object result = new javax.script.ScriptEngineManager().getEngineByName("JavaScript").eval(expression);
                displayField.setText(result.toString());
            } catch (Exception ex) {
                displayField.setText("Error");
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            CalculatorGUI calculator = new CalculatorGUI();
            calculator.setVisible(true);
        });
    }
}
